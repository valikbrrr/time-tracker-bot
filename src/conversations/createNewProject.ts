import { MyConversation, MyContextConversation } from "../myContext";
import { InlineKeyboard } from "grammy";
import { authenticate } from "../googleSheets";
import { addDataToSheet } from "../googleSheets"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö

export async function createNewProject(conversation: MyConversation, ctx: MyContextConversation) {
    const inlineKeyboard = new InlineKeyboard()
        .text("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "nextStepCreate").row()
        .text("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", "BackToCreateProject");
        
    const nameOfNewProject = await conversation.wait();
    const projectName = nameOfNewProject.message?.text; // –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å undefined

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ undefined
    if (!projectName) {
        await ctx.reply("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ:");
        return createNewProject(conversation, ctx); // –ó–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–Ω–æ–≤–∞
    }

    await ctx.reply(`–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º: "${projectName}" ü•≥`, {
        reply_markup: inlineKeyboard
    });

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ª–∏—Å—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
    const doc = await authenticate();
    await doc.loadInfo();
    await doc.addSheet({ title: projectName }); // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞

    const callbackQuery = await conversation.waitForCallbackQuery(["nextStepCreate", "BackToCreateProject"]);
    if (callbackQuery.callbackQuery.data === "nextStepCreate") {
        await callbackQuery.answerCallbackQuery();
        await ctx.reply("–ö–∞–∫–æ–µ –∫–æ–ª-–≤–æ —á–∞—Å–æ–≤ –≤—ã —Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞–¥ —ç—Ç–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º?‚è∞");

        let hoursOfNewProj: string | undefined;

        while (true) {
            const response = await conversation.wait();
            hoursOfNewProj = response.message?.text;

            if (hoursOfNewProj && /^(?:[1-9]|[1-9]\d|[1-5]\d{2}|6[0-9]{2}|7[0-4][0-4])$/.test(hoursOfNewProj)) {
                break;
            } else {
                await ctx.reply(`–ö–æ–ª-–≤–æ —á–∞—Å–æ–≤ –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 744.`);
            }
        }

        // –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–æ–≤—ã–π –ª–∏—Å—Ç
        const sheetId = doc.sheetsByIndex.length - 1; // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å –Ω–æ–≤–æ–≥–æ –ª–∏—Å—Ç–∞
        // await addDataToSheet(projectName, "–ó–∞–ø–∏—Å—å —á–∞—Å–æ–≤", [hoursOfNewProj]);
        await ctx.reply(`–í—ã –≤–≤–µ–ª–∏: ${hoursOfNewProj}. –≠—Ç–æ –≤—Å—ë, —Å–ø–∞—Å–∏–±–æ!`);
    } else if (callbackQuery.callbackQuery.data === "BackToCreateProject") {
        await callbackQuery.answerCallbackQuery();
        await ctx.reply(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:`);
        await createNewProject(conversation, ctx);
    }
}